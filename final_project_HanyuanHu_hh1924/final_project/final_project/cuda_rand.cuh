#pragma once
#include "cuda_runtime.h"
#include "cpu_rand.h"

namespace rand_tools
{
	__device__ double cuda_rand01(double *dseed)
	{
		using namespace rand_tools;

		int k;
		double p1, p2;

		p1 = a12 * dseed[1] - a13n * dseed[2];
		k = p1 / m1;
		p1 -= k * m1;
		if (p1 < 0.0) p1 += m1;
		dseed[2] = dseed[1]; dseed[1] = dseed[0]; dseed[0] = p1;

		p2 = a21 * dseed[3] - a23n * dseed[5];
		k = p2 / m2;
		p2 -= k * m2;
		if (p2 < 0.0) p2 += m2;
		dseed[5] = dseed[4]; dseed[4] = dseed[3]; dseed[3] = p2;

		if (p1 <= p2) return ((p1 - p2 + m1)*norm_);
		else return ((p1 - p2)*norm_);
	}

	__device__ double cuda_randn(double *seed)
	{
		using namespace rand_tools;

		double p = cuda_rand01(seed), q, r, ans;
		if (p <= 0.0) {
			ans = -100.0;
		}
		else {
			if (p >= 1.0) ans = 100.00;

			else {
				if (p < 0.02425) {
					q = sqrt(-2.0*log(p));
					ans = (((((-0.007784894002430293*q - 0.3223964580411365)*q - 2.400758277161838)*q - 2.549732539343734)*q + 4.374664141464968)*q + 2.938163982698783) /
						((((0.007784695709041462*q + 0.3224671290700398)*q + 2.445134137142996)*q + 3.754408661907416)*q + 1.0);
				}
				else {
					if (p < 0.97575) {
						q = p - 0.5;
						r = q * q;
						ans = (((((-39.69683028665376*r + 220.9460984245205)*r - 275.9285104469687)*r + 138.3577518672690)*r - 30.66479806614716)*r + 2.506628277459239)*q /
							(((((-54.47609879822406*r + 161.5858368580409)*r - 155.6989798598866)*r + 66.80131188771972)*r - 13.28068155288572)*r + 1.0);
					}
					else {
						if (p < 0.99) {
							q = sqrt(-2.0*log(1.0 - p));
							ans = -(((((-0.007784894002430293*q - 0.3223964580411365)*q - 2.400758277161838)*q - 2.549732539343734)*q + 4.374664141464968)*q + 2.938163982698783) /
								((((0.007784695709041462*q + 0.3224671290700398)*q + 2.445134137142996)*q + 3.754408661907416)*q + 1.0);
						}
						else {
							q = sqrt(-2.0*log(1 - p));
							ans = -(((((-0.007784894002430293*q - 0.3223964580411365)*q - 2.400758277161838)*q - 2.549732539343734)*q + 4.374664141464968)*q + 2.938163982698783) /
								((((0.007784695709041462*q + 0.3224671290700398)*q + 2.445134137142996)*q + 3.754408661907416)*q + 1.0);
						}
					}
				}
			}
		}

		return ans;
	}
}


